apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
data:
  default.conf: |
    server {
      listen 80;
      listen [::]:80;

      server_name finance.dlcruz.net;
      root /home/deploy/finance-web;

      location / {
        expires -1;
        add_header Pragma "no-cache";
        add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;

        try_files $uri $uri/ /index.html = 404;
      }

      location /api {
        rewrite ^/api/(.*) /$1 break;

        proxy_pass http://127.0.0.1:10081;
        proxy_redirect off;
      }
    }

    server {
      listen 80;
      listen [::]:80;

      server_name auth.dlcruz.net;

      location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_pass http://127.0.0.1:10080;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
  namespace: default
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
    name: web
  selector:
    app: api
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: finance
          image: index.docker.io/sesinando2/finance-web:0.0.2
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
        - name: finance-api
          image: index.docker.io/sesinando2/finance:0.0.1
          ports:
            - containerPort: 10081
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://127.0.0.1:3306/finance
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: SECURITY_OAUTH2_CLIENT_ACCESS-TOKEN-URI
              value: http://127.0.0.1:10080/oauth/token
            - name: SECURITY_OAUTH2_CLIENT_USER-AUTHORIZATION-URI
              value: http://127.0.0.1:10080/oauth/authorize
            - name: SECURITY_OAUTH2_RESOURCE_JWT_KEY-SET-URI
              value: 127.0.0.1:10080/oauth/token_key
        - name: auth-api
          image: index.docker.io/sesinando2/auth:0.0.1
          ports:
            - containerPort: 10080
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://127.0.0.1:3306/auth
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: SPRING_SOCIAL_GOOGLE_APPID
              value: 468891077020-nimcndul5rflsptssnqqu69btg2ldvg9.apps.googleusercontent.com
            - name: SPRING_SOCIAL_GOOGLE_APPSECRET
              value: GajbCrHkgJzHzspYjcyVL601
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=alert-synapse-211723:australia-southeast1:mysql-instance=tcp:3306",
                    "-credential_file=/secrets/cloudsql/alert-synapse-211723-bc719d7724f8.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        - name: nginx-config
          configMap:
            name: nginx-config
